module right_shifter #(
    SIZE = 32 : SIZE > 0
)(
    input a[SIZE],
    input b[5],
    input pad,
    output sh1[SIZE]
) {
    x_bit_right_shifter right_shift16(#SHIFT(16))
    x_bit_right_shifter right_shift8(#SHIFT(8))
    x_bit_right_shifter right_shift4(#SHIFT(4))
    x_bit_right_shifter right_shift2(#SHIFT(2))
    x_bit_right_shifter right_shift1(#SHIFT(1))
    
    always {
        right_shift16.pad = pad
        right_shift8.pad = pad
        right_shift4.pad = pad
        right_shift2.pad = pad
        right_shift1.pad = pad
        
        right_shift16.shift = b[4] // 16-bit shift if b[4] is 1
        right_shift8.shift = b[3]
        right_shift4.shift = b[2]
        right_shift2.shift = b[1]
        right_shift1.shift = b[0]
        
        // cascading shifters (output of stage 1 is input of stage 2)
        right_shift16.a = a
        right_shift8.a = right_shift16.out
        right_shift4.a = right_shift8.out
        right_shift2.a = right_shift4.out
        right_shift1.a = right_shift2.out
        
        sh1 = right_shift1.out
    }
}