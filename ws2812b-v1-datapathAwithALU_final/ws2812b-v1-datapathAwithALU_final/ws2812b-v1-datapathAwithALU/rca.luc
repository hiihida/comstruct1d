// A ripple-carry-adder combinational logic unit
module rca #(
    SIZE ~ 32 : SIZE > 1
)(
    input a[SIZE],
    input b[SIZE],
    input cin,
    output cout,
    output s[SIZE]
) {
    fa fa[SIZE]
    always {
        // implement ripple-carry-adder logic here 
        fa.a = a
        fa.b = b
        fa.cin = 0
        
        repeat(i, SIZE) {
            if (i == 0) {
                fa.cin[i] = cin
            }
            else {
                fa.cin[i] = fa.cout[i-1]
            }
        }
        
        cout = fa.cout[SIZE-1]
        s = fa.s // connect output bits
        //if (fa.s[SIZE-1] == 1) {
           //s = ~(fa.s - 1) // subtract 1 and XOR to get 2's complement
        //}
    }
}